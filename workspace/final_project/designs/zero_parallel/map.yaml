# ========================================================================
# Please do not modify this file. If there are double-curly-brace-enclosed
# statements, they are placeholders that should be set from the notebooks.
# ========================================================================
mapping:
- target: disk
  type: temporal
  factors: 
  - P=1
  - Q=1
  - R=1
  - S=1
  - N={{disk_factor_N}}
  - M={{disk_factor_M}}
  - C={{disk_factor_C}}
  permutation: [S, R, Q, P, C, M, N] # don't change this

- target: other_memories
  type: dataspace
  keep: [Weights]
  bypass: [Inputs, Outputs]
- target: other_memories
  type: temporal
  factors: 
  - P=1
  - Q=1
  - R=1
  - S=1
  - N={{other_memories_factor_N}}
  - M={{other_memories_factor_M}}
  - C={{other_memories_factor_C}}
  permutation: [S, R, Q, P, C, M, N] # don't change this
  
- target: GPU
  type: spatial  # spatial constraint specification
  factors: 
  - P=1
  - Q=1
  - R=1
  - S=1
  - N={{GPU_spatial_factor_N}}
  - M={{GPU_spatial_factor_M}}
  - C={{GPU_spatial_factor_C}}
  permutation: [N, C, M, R, S, P, Q]
  # tells at which index should the dimensions be mapped to Y (GPU cols),
  # the dimensions before that index all should map to X (GPU rows)
  split: 1
  
- target: self_memory
  type: temporal
  factors: 
  - P=1
  - Q=1
  - R=1
  - S=1
  - N={{self_memory_factor_N}}
  - M={{self_memory_factor_M}}
  - C={{self_memory_factor_C}}
  permutation: [S, R, Q, P, C, M, N] # don't change this

- target: PE
  type: spatial  # spatial constraint specification
  factors: 
  - P=1
  - Q=1
  - R=1
  - S=1
  - N=1
  - M={{PE_spatial_factor_M}}
  - C={{PE_spatial_factor_C}}
  permutation: [C, M, R, S, P, Q, N]
  # tells at which index should the dimensions be mapped to Y (PE cols),
  # the dimensions before that index all should map to X (PE rows)
  split: 1

- target: scratchpad
  type: temporal
  factors: 
  - R=0
  - S=0
  - P=0
  - Q=0
  - M=1
  - C=1
  - N={{scratchpad_factor_N}}
  permutation: [Q, P, N, C, M, S, R]

- target: scratchpad
  type: dataspace
  keep: [Weights]
  bypass: [Inputs, Outputs]

- target: weight_reg
  type: dataspace
  keep: [Weights]
  bypass: [Inputs, Outputs]
- target: weight_reg
  type: temporal
  factors: [R=1, S=1, P=1, Q=1, N=1, C=1, M=1]
  permutation: [R, S, P, Q, C, M, N]
- target: input_activation_reg
  type: dataspace
  keep: [Inputs]
  bypass: [Weights, Outputs]
- target: input_activation_reg
  type: temporal
  factors: [R=1, S=1, P=1, Q=1, N=1, C=1, M=1]
  permutation: [R, S, P, Q, C, M, N]
- target: output_activation_reg
  type: dataspace
  keep: [Outputs]
  bypass: [Weights, Inputs]
- target: output_activation_reg
  type: temporal
  factors: [R=1, S=1, P=1, Q=1, N=1, C=1, M=1]
  permutation: [R, S, P, Q, C, M, N]